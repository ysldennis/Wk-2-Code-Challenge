Shopping List Webpage
Introduction.
This project is a simple shopping list webpage. Users can add items to the list, mark items as purchased, and clear the list. The project is created using basic HTML, CSS, and JavaScript. Below is an explanation of how the code works and what each part does.

Files in the Project;
>index.html: The HTML file that structures the webpage.
>styles.css: The CSS file that styles the webpage.
>index.js: The JavaScript file that adds interactivity to the webpage.


HTML (index.html)
This file contains the structure of the webpage. It includes:

>An input field for adding new items.
>A button to add items to the list.
>An unordered list (<ul>) to display the shopping items.
>A button to clear the entire list.


CSS (styles.css)
This file contains the styles for the webpage. It makes the webpage look nice by setting background colors, fonts, and layout.


JavaScript (index.js)
This file contains the JavaScript code that makes the webpage interactive. It allows users to add items to the shopping list, mark them as purchased, and clear the list.

How the Code Works
JavaScript Array: We use a JavaScript array shoppingList to store the items in the shopping list.
DOM Elements: We select the input field, buttons, and list container using document.getElementById.
Add Items: When the "Add" button is clicked, the addItem function gets the input value, adds it to the shoppingList array, and calls renderList to update the list on the webpage.
Mark as Purchased: Each item has a "Mark Purchased" button. When clicked, the togglePurchased function is called to mark the item as purchased or unpurchased.
Clear List: When the "Clear List" button is clicked, the clearList function clears the shoppingList array and updates the list on the webpage.
Render List: The renderList function updates the list on the webpage by creating list items dynamically based on the shoppingList array.
This is a simple and interactive shopping list application that helps users manage their shopping items easily.